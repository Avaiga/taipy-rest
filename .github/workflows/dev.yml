name: test workflow

on:
  push:
    branches: [ main,release ]
  pull_request:
    branches: [ main,release ]

  workflow_dispatch:
    inputs:
      user-to-notify:
        description: "Github username to notify"
        required: false
        default: ""

jobs:
  test:
    strategy:
      matrix:
        python-versions: ['3.8', '3.9', '3.10']
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install pipenv
        run: |
          sed -i 's/ssh/https/g' Pipfile
          sed -i 's/git@github/${{ secrets.PERSONAL_TOKEN }}@github/g' Pipfile

          python -m pip install --upgrade pipenv wheel
          pip install pytest pytest-cov tox tox-gh-actions

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev --python 3.9

      - id: code-quality
        if: matrix.os == 'ubuntu-18.04' && matrix.python-versions == '3.9'
        uses: ricardochaves/python-lint@v1.4.0
        with:
            python-root-list: "src tests"
            use-pylint: false
            use-isort: false
            extra-pycodestyle-options: "--max-line-length=120 --ignore=E203,E266,E501,E722,W503,F403,F401"
            extra-mypy-options: "--ignore-missing-imports"

      - name: test with tox
        run: |
           tox -e all-tests

      - name: Notify user if failed
        if: failure() && github.event_name == 'workflow_dispatch'
        run: |
          if [[ -n "${{ github.event.inputs.user-to-notify }}" ]]; then
            curl "${{ secrets.notify_endpoint }}" -d '{"username": "${{ github.event.inputs.user-to-notify }}", "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }' -H "Content-Type: application/json"
          fi
        shell: bash
